#usda 1.0
(
    defaultPrim = "geom"
    metersPerUnit = 0.01
    upAxis = "Z"
)

def Xform "geom" (
    kind = "component"
)
{
    def Mesh "lod0" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        kind = "component"
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-100, -100, 0), (100, 100, 200.00002)]
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
        rel material:binding = </geom/mtl/initialShadingGroup>
        normal3f[] normals = [(0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(-100, -100, 0), (100, -100, 0), (-100, -100, 200.00002), (100, -100, 200.00002), (-100, 100, 200.00002), (100, 100, 200.00002), (-100, 100, 0), (100, 100, 0)]
        texCoord2f[] primvars:st = [(0.375, 0), (0.625, 0), (0.375, 0.25), (0.625, 0.25), (0.375, 0.5), (0.625, 0.5), (0.375, 0.75), (0.625, 0.75), (0.375, 1), (0.625, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25)] (
            customData = {
                dictionary Maya = {
                    token name = "map1"
                }
            }
            interpolation = "faceVarying"
        )
        int[] primvars:st:indices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 9, 8, 1, 10, 11, 3, 12, 0, 2, 13]
        uniform token subdivisionScheme = "none"

        def GeomSubset "back"
        {
            uniform token elementType = "face"
            uniform token familyName = "componentTag"
            int[] indices = [2]
        }

        def GeomSubset "bottom"
        {
            uniform token elementType = "face"
            uniform token familyName = "componentTag"
            int[] indices = [3]
        }

        def GeomSubset "front"
        {
            uniform token elementType = "face"
            uniform token familyName = "componentTag"
            int[] indices = [0]
        }

        def GeomSubset "left"
        {
            uniform token elementType = "face"
            uniform token familyName = "componentTag"
            int[] indices = [5]
        }

        def GeomSubset "right"
        {
            uniform token elementType = "face"
            uniform token familyName = "componentTag"
            int[] indices = [4]
        }

        def GeomSubset "top"
        {
            uniform token elementType = "face"
            uniform token familyName = "componentTag"
            int[] indices = [1]
        }
    }

    def Mesh "lod1" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        kind = "component"
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-99.63361, -99.63361, 2.3841858e-7), (99.63363, 99.63358, 199.26723)]
        int[] faceVertexCounts = [4, 3, 3, 3, 3]
        int[] faceVertexIndices = [0, 3, 2, 1, 0, 1, 4, 1, 2, 4, 2, 3, 4, 3, 0, 4]
        rel material:binding = </geom/mtl/initialShadingGroup>
        normal3f[] normals = [(0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (-0.66666645, 0.66666687, 0.33333325), (-0.6666664, 0.6666669, 0.33333328), (-0.6666664, 0.666667, 0.3333333), (-0.66666675, -0.6666665, 0.33333334), (-0.66666675, -0.6666665, 0.33333334), (-0.6666668, -0.6666665, 0.33333337), (0.66666657, -0.6666668, 0.3333333), (0.66666657, -0.6666668, 0.3333333), (0.66666657, -0.6666668, 0.3333333), (0.6666666, 0.6666666, 0.3333333), (0.6666666, 0.6666666, 0.3333333), (0.6666666, 0.6666666, 0.3333333)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(0.00003978919, 99.63358, 2.3841858e-7), (-99.63361, 0.000008702278, 2.468882e-7), (-0.000027761664, -99.63361, 2.3841858e-7), (99.63363, 0, 2.468882e-7), (0, 0, 199.26723)]
        texCoord2f[] primvars:st = [(0.50000006, 0), (0.25, 0.24999999), (0.5, 0.5), (0.75, 0.25), (0.25, 0.5), (0.375, 0.5), (0.5, 0.5), (0.625, 0.5), (0.75, 0.5), (0.5, 1)] (
            customData = {
                dictionary Maya = {
                    token name = "map1"
                }
            }
            interpolation = "faceVarying"
        )
        int[] primvars:st:indices = [0, 3, 2, 1, 4, 5, 9, 5, 6, 9, 6, 7, 9, 7, 8, 9]
        uniform token subdivisionScheme = "none"
        float3 xformOp:translate:pivot = (0, 0, 2.468882e-7)
        uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

        def GeomSubset "bottom"
        {
            uniform token elementType = "face"
            uniform token familyName = "componentTag"
            int[] indices = [0]
        }

        def GeomSubset "sides"
        {
            uniform token elementType = "face"
            uniform token familyName = "componentTag"
            int[] indices = [1, 2, 3, 4]
        }
    }

    def Mesh "lod2" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        kind = "component"
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-100, -100, -0.0000076293945), (99.63362, 99.81778, 200.00003)]
        int[] faceVertexCounts = [4]
        int[] faceVertexIndices = [0, 1, 3, 2]
        rel material:binding = </geom/mtl/initialShadingGroup>
        normal3f[] normals = [(0, -0.70742905, 0.7067844), (0, -0.70742905, 0.7067844), (0, -0.70742905, 0.7067844), (0, -0.70742905, 0.7067844)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(-100, -100, -0.0000076293945), (99.63362, -100, -0.0000076293945), (-100, 99.81778, 200.00003), (99.63362, 99.81778, 200.00003)]
        texCoord2f[] primvars:st = [(0, 0), (1, 0), (0, 1), (1, 1)] (
            customData = {
                dictionary Maya = {
                    token name = "map1"
                }
            }
            interpolation = "faceVarying"
        )
        int[] primvars:st:indices = [0, 1, 3, 2]
        uniform token subdivisionScheme = "none"
        float3 xformOp:translate:pivot = (0, 0, 77.78965)
        uniform token[] xformOpOrder = ["xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]
    }

    def Scope "mtl"
    {
        def Material "initialShadingGroup"
        {
        }
    }
}

